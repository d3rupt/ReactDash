{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\PicsNNews\\\\News\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Headline from './Headline';\nimport('./News.css');\nexport default function News() {\n  _s();\n\n  const [newsJson, getNewsJson] = useState(null);\n  const [headlines, getHeadlines] = useState(null);\n  const [shownHeadlines, getShownHeadlines] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [animConsts, setAnimConsts] = useState({\n    indexes: [0, 1, 2],\n    timeout: 500\n  });\n  useEffect(() => {\n    GetNews();\n  }, []);\n  useEffect(() => {\n    animConsts.indexes.forEach(index => {\n      setTimeout(() => {\n        document.getElementById(`headline${index}`).classList.remove('opacity0');\n      }, animConsts.timeout * (index + 1));\n    });\n  }, [shownHeadlines]);\n  useEffect(() => {\n    if (headlines) {\n      let posts = [...headlines];\n\n      if (headlines.length >= 3) {\n        animConsts.indexes.forEach(index => {\n          setTimeout(() => {\n            document.getElementById(`headline${index}`).classList.add('opacity0');\n          }, animConsts.timeout * (index + 1));\n        });\n        getShownHeadlines(posts.slice(3));\n      } else {\n        GetNews();\n      }\n    }\n  }, [headlines]);\n\n  const GetNews = () => {\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json').then(res => res.json()).then(newsLinks => {\n      let posts = [...newsLinks.data.children.slice(0, 24)];\n      getHeadlines(posts);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news\",\n    children: shownHeadlines ? shownHeadlines.slice(0, 3).map((headline, index) => {\n      return /*#__PURE__*/_jsxDEV(Headline, {\n        id: `headline${index}`,\n        title: headline.data.title,\n        subreddit: headline.data.subreddit_name_prefixed,\n        thumbnail: headline.data.thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n\n_s(News, \"+fYj+EwNlqPnJNH01uDC9IWdf1A=\");\n\n_c = News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/PicsNNews/News/News.js"],"names":["React","useState","useEffect","Headline","News","newsJson","getNewsJson","headlines","getHeadlines","shownHeadlines","getShownHeadlines","visible","setVisible","animConsts","setAnimConsts","indexes","timeout","GetNews","forEach","index","setTimeout","document","getElementById","classList","remove","posts","length","add","slice","fetch","then","res","json","newsLinks","data","children","map","headline","title","subreddit_name_prefixed","thumbnail"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Headline from './Headline'\r\n\r\nimport ('./News.css')\r\n\r\nexport default function News() {\r\n  const [newsJson, getNewsJson] = useState(null);\r\n  const [headlines, getHeadlines] = useState(null);\r\n  const [shownHeadlines, getShownHeadlines] = useState(null)\r\n  const [visible, setVisible] = useState(false)\r\n  const [animConsts, setAnimConsts] = useState({indexes: [0, 1, 2], timeout: 500})\r\n  useEffect(() => {\r\n    GetNews()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    animConsts.indexes.forEach(index => {\r\n      setTimeout(() => {\r\n        document\r\n            .getElementById(`headline${index}`)\r\n            .classList\r\n            .remove('opacity0')\r\n      }, animConsts.timeout*(index+1))\r\n    })\r\n  }, [shownHeadlines]);\r\n\r\n  useEffect(() => {\r\n    if (headlines) {\r\n      let posts = [...headlines]\r\n      if (headlines.length >= 3) {\r\n\r\n        animConsts.indexes.forEach(index => {\r\n          setTimeout(() => {\r\n            document\r\n                .getElementById(`headline${index}`)\r\n                .classList\r\n                .add('opacity0')\r\n          }, animConsts.timeout*(index+1))\r\n        })\r\n        getShownHeadlines(posts.slice(3,))\r\n      } else {\r\n        GetNews()\r\n      }\r\n    }\r\n  }, [headlines])\r\n\r\n  const GetNews = () => {\r\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json')\r\n    .then(res => res.json())\r\n    .then(newsLinks => {\r\n      let posts = [...newsLinks.data.children.slice(0,24)];\r\n       getHeadlines(posts);\r\n    })\r\n  }\r\n\r\n    return(\r\n      <div className=\"news\">\r\n      {shownHeadlines ? shownHeadlines.slice(0,3).map((headline, index) => {\r\n        return <Headline id={`headline${index}`} title={headline.data.title} subreddit={headline.data.subreddit_name_prefixed} thumbnail={headline.data.thumbnail} />\r\n      }) : null}\r\n      </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}