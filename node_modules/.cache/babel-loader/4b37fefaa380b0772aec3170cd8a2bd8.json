{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\CalendarComponents\\\\Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport './Calendar.css';\nimport CalendarDay from './CalendarDay';\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.GetEvents = this.GetEvents.bind(this);\n    this.state = {\n      events: {},\n      holidays: {}\n    };\n  }\n\n  GetEvents() {\n    let today = new Date();\n    let oneWeek = new Date();\n    oneWeek.setDate(oneWeek.getDate() + 6);\n\n    let sortEvents = () => {\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/thdnkns@gmail.com/events?singleEvents=True&orderBy=startTime&timeMin=${today.toISOString()}&timeMax=${oneWeek.toISOString()}&key=AIzaSyDZgdchyvtfLwtT2s1JH5dxgnwd-2nI2dw`).then(res => res.json()).then(events => {\n        let thisWeek = {\n          0: [],\n          1: [],\n          2: [],\n          3: [],\n          4: [],\n          5: [],\n          6: []\n        };\n        let eventsList = [...events.items];\n        console.log(new Date(Date.parse(eventsList[0].start.dateTime)).getDate());\n        eventsList.forEach(event => {\n          if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate()) {\n            thisWeek[0].push(event);\n          } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 1) {\n            thisWeek[1].push(event);\n          } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 2) {\n            thisWeek[2].push(event);\n          } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 3) {\n            thisWeek[3].push(event);\n          } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 4) {\n            thisWeek[4].push(event);\n          } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 5) {\n            thisWeek[5].push(event);\n          } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 6) {\n            thisWeek[6].push(event);\n          }\n        });\n        this.setState({\n          events: thisWeek\n        });\n      });\n    };\n\n    let sortHolidays = () => {\n      fetch('https://www.googleapis.com/calendar/v3/calendars/en.canadian%23holiday%40group.v.calendar.google.com/events?key=AIzaSyDZgdchyvtfLwtT2s1JH5dxgnwd-2nI2dw').then(res => res.json()).then(holidays => {\n        let holidaysWeek = {\n          0: [],\n          1: [],\n          2: [],\n          3: [],\n          4: [],\n          5: [],\n          6: []\n        };\n        console.log(holidays);\n        let holidaysList = [...holidays.items];\n        holidaysList.forEach(holiday => {\n          let holidayDate = new Date(Date.parse(holiday.start.date));\n          console.log('HOLIDAYDATE: ' + holidaydate);\n\n          if (holidayDate.getDate() === today.getDate() && holidayDate.getMonth() === today.getMonth()) {\n            holidaysWeek[0].push(holiday);\n          } else if (holidayDate.getDate() === today.getDate() + 1 && holidayDate.getMonth() === today.getMonth()) {\n            holidaysWeek[1].push(holiday);\n          } else if (holidayDate.getDate() === today.getDate() + 2 && holidayDate.getMonth() === today.getMonth()) {\n            holidaysWeek[2].push(holiday);\n          } else if (holidayDate.getDate() === today.getDate() + 3 && holidayDate.getMonth() === today.getMonth()) {\n            holidaysWeek[3].push(holiday);\n          } else if (holidayDate.getDate() === today.getDate() + 4 && holidayDate.getMonth() === today.getMonth()) {\n            holidaysWeek[4].push(holiday);\n          } else if (holidayDate.getDate() === today.getDate() + 5 && holidayDate.getMonth() === today.getMonth()) {\n            holidaysWeek[5].push(holiday);\n          } else if (holidayDate.getDate() === today.getDate() + 6 && holidayDate.getMonth() === today.getMonth()) {\n            holidaysWeek[6].push(holiday);\n          }\n        });\n        this.setState({\n          holidays: holidaysWeek\n        });\n      });\n    };\n\n    sortEvents();\n    sortHolidays();\n  }\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    this.GetEvents();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDiv\",\n      children: [/*#__PURE__*/_jsxDEV(CalendarDay, {\n        holidays: this.state.holidays[0],\n        events: this.state.events[0],\n        date: moment().format('MMM D')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        holidays: this.state.holidays[1],\n        events: this.state.events[1],\n        date: moment().add(1, 'days').format('MMM D')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        holidays: this.state.holidays[2],\n        events: this.state.events[2],\n        date: moment().add(2, 'days').format('MMM D')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        holidays: this.state.holidays[3],\n        events: this.state.events[3],\n        date: moment().add(3, 'days').format('MMM D')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        holidays: this.state.holidays[4],\n        events: this.state.events[4],\n        date: moment().add(4, 'days').format('MMM D')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        holidays: this.state.holidays[5],\n        events: this.state.events[5],\n        date: moment().add(5, 'days').format('MMM D')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        holidays: this.state.holidays[6],\n        events: this.state.events[6],\n        date: moment().add(6, 'days').format('MMM D')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/CalendarComponents/Calendar.js"],"names":["React","moment","CalendarDay","Calendar","Component","constructor","props","GetEvents","bind","state","events","holidays","today","Date","oneWeek","setDate","getDate","sortEvents","fetch","toISOString","then","res","json","thisWeek","eventsList","items","console","log","parse","start","dateTime","forEach","event","push","setState","sortHolidays","holidaysWeek","holidaysList","holiday","holidayDate","date","holidaydate","getMonth","componentDidUpdate","componentDidMount","render","format","add"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport moment from 'moment'\r\nimport './Calendar.css'\r\nimport CalendarDay from './CalendarDay'\r\n\r\nexport default class Calendar extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.GetEvents = this.GetEvents.bind(this)\r\n    this.state = {\r\n      events: {},\r\n      holidays: {}\r\n    }\r\n  }\r\n\r\n\r\n  GetEvents() {\r\n    let today = new Date()\r\n    let oneWeek = new Date()\r\n    oneWeek.setDate(oneWeek.getDate() + 6)\r\n\r\n    let sortEvents = () => {\r\n\r\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/thdnkns@gmail.com/events?singleEvents=True&orderBy=startTime&timeMin=${today.toISOString()}&timeMax=${oneWeek.toISOString()}&key=AIzaSyDZgdchyvtfLwtT2s1JH5dxgnwd-2nI2dw`)\r\n        .then(res => res.json())\r\n        .then(events => {\r\n\r\n          let thisWeek = {\r\n            0: [],\r\n            1: [],\r\n            2: [],\r\n            3: [],\r\n            4: [],\r\n            5: [],\r\n            6: []\r\n          }\r\n\r\n          let eventsList = [...events.items]\r\n          console.log(new Date(Date.parse(eventsList[0].start.dateTime)).getDate())\r\n          eventsList.forEach(event => {\r\n            if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate()) {\r\n              thisWeek[0].push(event);\r\n            } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 1) {\r\n              thisWeek[1].push(event)\r\n            } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 2) {\r\n              thisWeek[2].push(event)\r\n            } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 3) {\r\n              thisWeek[3].push(event)\r\n            } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 4) {\r\n              thisWeek[4].push(event)\r\n            } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 5) {\r\n              thisWeek[5].push(event)\r\n            } else if (new Date(Date.parse(event.start.dateTime)).getDate() == today.getDate() + 6) {\r\n              thisWeek[6].push(event)\r\n            }\r\n          })\r\n          this.setState({\r\n            events: thisWeek\r\n          })\r\n        })\r\n    }\r\n\r\n    let sortHolidays = () => {\r\n\r\n      fetch('https://www.googleapis.com/calendar/v3/calendars/en.canadian%23holiday%40group.v.calendar.google.com/events?key=AIzaSyDZgdchyvtfLwtT2s1JH5dxgnwd-2nI2dw')\r\n        .then(res => res.json())\r\n        .then(holidays => {\r\n\r\n          let holidaysWeek = {\r\n            0: [],\r\n            1: [],\r\n            2: [],\r\n            3: [],\r\n            4: [],\r\n            5: [],\r\n            6: []\r\n          }\r\n\r\n          console.log(holidays)\r\n          let holidaysList = [...holidays.items]\r\n          holidaysList.forEach(holiday => {\r\n            let holidayDate = new Date(Date.parse(holiday.start.date))\r\n            console.log('HOLIDAYDATE: ' + holidaydate)\r\n            if (holidayDate.getDate() === today.getDate() && holidayDate.getMonth() === today.getMonth()) {\r\n              holidaysWeek[0].push(holiday);\r\n            } else if (holidayDate.getDate() === today.getDate() + 1 && holidayDate.getMonth() === today.getMonth()) {\r\n              holidaysWeek[1].push(holiday)\r\n            } else if (holidayDate.getDate() === today.getDate() + 2 && holidayDate.getMonth() === today.getMonth()) {\r\n              holidaysWeek[2].push(holiday)\r\n            } else if (holidayDate.getDate() === today.getDate() + 3 && holidayDate.getMonth() === today.getMonth()) {\r\n              holidaysWeek[3].push(holiday)\r\n            } else if (holidayDate.getDate() === today.getDate() + 4 && holidayDate.getMonth() === today.getMonth()) {\r\n              holidaysWeek[4].push(holiday)\r\n            } else if (holidayDate.getDate() === today.getDate() + 5 && holidayDate.getMonth() === today.getMonth()) {\r\n              holidaysWeek[5].push(holiday)\r\n            } else if (holidayDate.getDate() === today.getDate() + 6 && holidayDate.getMonth() === today.getMonth()) {\r\n              holidaysWeek[6].push(holiday)\r\n            }\r\n          })\r\n          this.setState({\r\n            holidays: holidaysWeek\r\n          })\r\n        })\r\n    }\r\n    sortEvents()\r\n    sortHolidays()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.GetEvents()\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <div className=\"calendarDiv\">\r\n      <CalendarDay holidays={this.state.holidays[0]} events={this.state.events[0]} date={moment().format('MMM D')}/>\r\n      <CalendarDay holidays={this.state.holidays[1]} events={this.state.events[1]} date={moment().add(1, 'days').format('MMM D')}/>\r\n      <CalendarDay holidays={this.state.holidays[2]} events={this.state.events[2]} date={moment().add(2, 'days').format('MMM D')}/>\r\n      <CalendarDay holidays={this.state.holidays[3]} events={this.state.events[3]} date={moment().add(3, 'days').format('MMM D')}/>\r\n      <CalendarDay holidays={this.state.holidays[4]} events={this.state.events[4]} date={moment().add(4, 'days').format('MMM D')}/>\r\n      <CalendarDay holidays={this.state.holidays[5]} events={this.state.events[5]} date={moment().add(5, 'days').format('MMM D')}/>\r\n      <CalendarDay holidays={this.state.holidays[6]} events={this.state.events[6]} date={moment().add(6, 'days').format('MMM D')}/>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}