{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport suncalc from 'suncalc';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport './App.css';\nimport WeatherSection from './WeatherSection';\nimport Calendar from './CalendarComponents/Calendar';\nimport PicsNNews from './PicsNNews/PicsNNews';\nconst moment = extendMoment(Moment);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLocation = weather => {\n      console.log('APPLEVEL: ' + weather);\n      this.setState({\n        location: weather\n      }, this.RequestWeather);\n    };\n\n    this.state = {\n      isLoading: false,\n      weatherData: null,\n      location: null //isDay: 1\n\n    };\n  }\n\n  /*  componentDidUpdate() {\n      if (this.state.isDay == 0) {\n        document.querySelector('.calendarDiv').classList.add('calNight');\n        for (var cal in document.querySelectorAll('.calendar')) {\n          cal.classList.add('calNight')\n        }\n      } else if (this.state.isDay == 1) {\n        document.querySelector('.calendarDiv').classList.remove('calNight');\n        for (var cal in document.querySelectorAll('.calendar')) {\n          cal.classList.remove('calNight')\n        }\n      }\n    }*/\n  componentDidMount() {\n    /*this.setState({\n      isDay: 1\n    })*/\n    const isDay = setInterval(() => {\n      const sunTimes = suncalc.getTimes(new Date(), 49.895077, -97.138451);\n\n      if (moment().within(moment.range(moment(sunTimes.sunrise, 'ddd MMM DD YYYY HH:mm'), moment(sunTimes.sunset)))) {\n        //if (moment().isBefore(moment(sunTimes.dusk, 'ddd MMM DD YYYY HH:mm'))) {\n        this.setState({\n          isDay: 1\n        });\n      } else {\n        this.setState({\n          isDay: 0\n        });\n      }\n    }, 60000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        isDay: this.state.isDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherSection, {\n        isDay: this.state.isDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PicsNNews, {\n        isDay: this.state.isDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n/*\n*/","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/App.js"],"names":["React","suncalc","Moment","extendMoment","WeatherSection","Calendar","PicsNNews","moment","App","Component","constructor","props","getLocation","weather","console","log","setState","location","RequestWeather","state","isLoading","weatherData","componentDidMount","isDay","setInterval","sunTimes","getTimes","Date","within","range","sunrise","sunset","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,MAAMC,MAAM,GAAGJ,YAAY,CAACD,MAAD,CAA3B;;AAEA,MAAMM,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,WATmB,GASJC,OAAD,IAAa;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,OAA3B;AACA,WAAKG,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEJ;AAAX,OAAd,EAAmC,KAAKK,cAAxC;AACD,KAZkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXJ,MAAAA,QAAQ,EAAE,IAHC,CAIX;;AAJW,KAAb;AAMD;;AAMH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEEK,EAAAA,iBAAiB,GAAG;AAClB;AACJ;AACA;AACI,UAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9B,YAAMC,QAAQ,GAAGxB,OAAO,CAACyB,QAAR,CAAiB,IAAIC,IAAJ,EAAjB,EAA6B,SAA7B,EAAwC,CAAC,SAAzC,CAAjB;;AACA,UAAIpB,MAAM,GAAGqB,MAAT,CAAgBrB,MAAM,CAACsB,KAAP,CAAatB,MAAM,CAACkB,QAAQ,CAACK,OAAV,EAAmB,uBAAnB,CAAnB,EAAgEvB,MAAM,CAACkB,QAAQ,CAACM,MAAV,CAAtE,CAAhB,CAAJ,EAA+G;AAC/G;AACE,aAAKf,QAAL,CAAc;AACZO,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OALD,MAKO;AACL,aAAKP,QAAL,CAAc;AACZO,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;AACF,KAZwB,EAYtB,KAZsB,CAAzB;AAaD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWI;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAzD+B;;AA4DlC,eAAef,GAAf;AACA;AACA","sourcesContent":["import React from 'react'\nimport suncalc from 'suncalc'\nimport Moment from 'moment'\nimport { extendMoment } from 'moment-range';\n\nimport './App.css';\nimport WeatherSection from './WeatherSection'\nimport Calendar from './CalendarComponents/Calendar';\nimport PicsNNews from './PicsNNews/PicsNNews'\n\nconst moment = extendMoment(Moment);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      weatherData: null,\n      location: null\n      //isDay: 1\n    }\n  }\n  getLocation = (weather) => {\n    console.log('APPLEVEL: ' + weather)\n    this.setState({location: weather}, this.RequestWeather)\n  }\n\n/*  componentDidUpdate() {\n    if (this.state.isDay == 0) {\n      document.querySelector('.calendarDiv').classList.add('calNight');\n      for (var cal in document.querySelectorAll('.calendar')) {\n        cal.classList.add('calNight')\n      }\n    } else if (this.state.isDay == 1) {\n      document.querySelector('.calendarDiv').classList.remove('calNight');\n      for (var cal in document.querySelectorAll('.calendar')) {\n        cal.classList.remove('calNight')\n      }\n    }\n  }*/\n\n  componentDidMount() {\n    /*this.setState({\n      isDay: 1\n    })*/\n    const isDay = setInterval(() => {\n      const sunTimes = suncalc.getTimes(new Date(), 49.895077, -97.138451);\n      if (moment().within(moment.range(moment(sunTimes.sunrise, 'ddd MMM DD YYYY HH:mm'), moment(sunTimes.sunset)))) {\n      //if (moment().isBefore(moment(sunTimes.dusk, 'ddd MMM DD YYYY HH:mm'))) {\n        this.setState({\n          isDay: 1\n        })\n      } else {\n        this.setState({\n          isDay: 0\n        })\n      }\n    }, 60000)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Calendar isDay={this.state.isDay}/>\n        <WeatherSection isDay={this.state.isDay}/>\n        <PicsNNews isDay={this.state.isDay}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n/*\n*/\n"]},"metadata":{},"sourceType":"module"}