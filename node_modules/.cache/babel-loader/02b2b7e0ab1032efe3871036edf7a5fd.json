{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\PicsNNews\\\\News\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Headline from './Headline';\nimport('./News.css');\nexport default function News() {\n  _s();\n\n  const [newsJson, getNewsJson] = useState(null);\n  const [headlines, getHeadlines] = useState(false);\n  const [shownHeadlines, getShownHeadlines] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [animConsts, setAnimConsts] = useState({\n    interval: 3,\n    indexes: [0, 1, 2],\n    timeout: 250\n  });\n  const [newsInit, isNewsInit] = useState(false);\n  useEffect(() => {\n    GetNews();\n  }, []);\n  useEffect(() => {\n    if (shownHeadlines) {\n      setInterval(() => {\n        console.log(shownHeadlines.length);\n        getShownHeadlines([...shownHeadlines.slice(3)]);\n      }, 5 * 1000);\n    }\n  }, [headlines]);\n\n  const GetNews = () => {\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json').then(res => res.json()).then(newsLinks => {\n      let posts = [...newsLinks.data.children];\n      getHeadlines(true);\n      getShownHeadlines(posts);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news\",\n    children: shownHeadlines ? shownHeadlines.slice(0, 3).map((headline, index) => {\n      return /*#__PURE__*/_jsxDEV(Headline, {\n        id: `headline${index}`,\n        title: headline.data.title,\n        subreddit: headline.data.subreddit_name_prefixed,\n        thumbnail: headline.data.thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(Headline, {\n      title: \"\",\n      id: \"\",\n      subreddit: \"\",\n      thumbnail: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n\n_s(News, \"WhmG4f4Bkv/ZbMDpVpJGG2ahf/E=\");\n\n_c = News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/PicsNNews/News/News.js"],"names":["React","useState","useEffect","Headline","News","newsJson","getNewsJson","headlines","getHeadlines","shownHeadlines","getShownHeadlines","visible","setVisible","animConsts","setAnimConsts","interval","indexes","timeout","newsInit","isNewsInit","GetNews","setInterval","console","log","length","slice","fetch","then","res","json","newsLinks","posts","data","children","map","headline","index","title","subreddit_name_prefixed","thumbnail"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAQ,YAAR;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC;AAACc,IAAAA,QAAQ,EAAE,CAAX;AAAaC,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAtB;AAAiCC,IAAAA,OAAO,EAAE;AAA1C,GAAD,CAA5C;AACA,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBlB,QAAQ,CAAC,KAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,cAAJ,EAAoB;AAClBY,MAAAA,WAAW,CAAC,MAAM;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYd,cAAc,CAACe,MAA3B;AACAd,QAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAc,CAACgB,KAAf,CAAqB,CAArB,CAAJ,CAAD,CAAjB;AACD,OAHU,EAGR,IAAI,IAHI,CAAX;AAID;AACF,GAPQ,EAON,CAAClB,SAAD,CAPM,CAAT;;AASA,QAAMa,OAAO,GAAG,MAAM;AACpBM,IAAAA,KAAK,CAAC,2DAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,SAAS,IAAI;AACjB,UAAIC,KAAK,GAAG,CAAC,GAAGD,SAAS,CAACE,IAAV,CAAeC,QAAnB,CAAZ;AACAzB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,iBAAiB,CAACqB,KAAD,CAAjB;AACD,KAND;AAOD,GARD;;AAUE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACCtB,cAAc,GAAGA,cAAc,CAACgB,KAAf,CAAqB,CAArB,EAAuB,CAAvB,EAA0BS,GAA1B,CAA8B,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACnE,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,WAAUA,KAAM,EAA/B;AAAkC,QAAA,KAAK,EAAED,QAAQ,CAACH,IAAT,CAAcK,KAAvD;AAA8D,QAAA,SAAS,EAAEF,QAAQ,CAACH,IAAT,CAAcM,uBAAvF;AAAgH,QAAA,SAAS,EAAEH,QAAQ,CAACH,IAAT,CAAcO;AAAzI;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFiB,CAAH,gBAEV,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC,EAAhB;AAAmB,MAAA,EAAE,EAAC,EAAtB;AAAyB,MAAA,SAAS,EAAC,EAAnC;AAAsC,MAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA;AAHL;AAAA;AAAA;AAAA;AAAA,UADF;AAOH;;GAtCuBnC,I;;KAAAA,I","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Headline from './Headline'\r\n\r\nimport ('./News.css')\r\n\r\nexport default function News() {\r\n  const [newsJson, getNewsJson] = useState(null);\r\n  const [headlines, getHeadlines] = useState(false);\r\n  const [shownHeadlines, getShownHeadlines] = useState([])\r\n  const [visible, setVisible] = useState(false)\r\n  const [animConsts, setAnimConsts] = useState({interval: 3,indexes: [0, 1, 2], timeout: 250})\r\n  const [newsInit, isNewsInit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    GetNews()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (shownHeadlines) {\r\n      setInterval(() => {\r\n        console.log(shownHeadlines.length)\r\n        getShownHeadlines([...shownHeadlines.slice(3,)])\r\n      }, 5 * 1000)\r\n    }\r\n  }, [headlines])\r\n\r\n  const GetNews = () => {\r\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json')\r\n    .then(res => res.json())\r\n    .then(newsLinks => {\r\n      let posts = [...newsLinks.data.children];\r\n      getHeadlines(true)\r\n      getShownHeadlines(posts)\r\n    })\r\n  }\r\n\r\n    return(\r\n      <div className=\"news\">\r\n      {shownHeadlines ? shownHeadlines.slice(0,3).map((headline, index) => {\r\n        return <Headline id={`headline${index}`} title={headline.data.title} subreddit={headline.data.subreddit_name_prefixed} thumbnail={headline.data.thumbnail} />\r\n      }) : <Headline title='' id='' subreddit='' thumbnail='' />}\r\n      </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}