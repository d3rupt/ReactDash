{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport WeatherTile from './WeatherTile';\nimport SearchBar from './SearchBar';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLocation = weather => {\n      this.setState({\n        location: weather\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      weatherData: null,\n      location: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://api.weatherapi.com/v1/forecast.json?key=6018bc6ca5bb4a4884c184418202812&q=Winnipeg&days=5').then(response => response.json()).then(json => {\n      this.setState({\n        isLoading: true,\n        currentData: json.current,\n        weatherData: json.forecast.forecastday\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        weatherCallBack: this.getLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tiles\",\n        children: [this.state.isLoading ? /*#__PURE__*/_jsxDEV(WeatherTile, {\n          icon: this.state.currentData.condition.icon,\n          date: this.state.location,\n          today: this.state.currentData.temp_c\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this) : null, this.state.isLoading ? this.state.weatherData.map(data => /*#__PURE__*/_jsxDEV(WeatherTile, {\n          icon: data.day.condition.icon,\n          date: data.date,\n          high: data.day.maxtemp_c,\n          low: data.day.mintemp_c\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 45\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/weather/src/App.js"],"names":["React","WeatherTile","SearchBar","App","Component","constructor","props","getLocation","weather","setState","location","state","isLoading","weatherData","componentDidMount","fetch","then","response","json","currentData","current","forecast","forecastday","render","condition","icon","temp_c","map","data","day","date","maxtemp_c","mintemp_c"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,WApBmB,GAoBJC,OAAD,IAAa;AACzB,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF;AAAX,OAAd;AACD,KAtBkB;;AAEjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXH,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,kGAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ,WAAKT,QAAL,CAAc;AACZG,QAAAA,SAAS,EAAE,IADC;AAEZO,QAAAA,WAAW,EAAED,IAAI,CAACE,OAFN;AAGZP,QAAAA,WAAW,EAAEK,IAAI,CAACG,QAAL,CAAcC;AAHf,OAAd;AAKD,KARD;AASD;;AAIDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA,QAAC,SAAD;AAAW,QAAA,eAAe,EAAE,KAAKhB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACC,KAAKI,KAAL,CAAWC,SAAX,gBACD,QAAC,WAAD;AAAa,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWQ,WAAX,CAAuBK,SAAvB,CAAiCC,IAApD;AAA0D,UAAA,IAAI,EAAE,KAAKd,KAAL,CAAWD,QAA3E;AAAqF,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWQ,WAAX,CAAuBO;AAAnH;AAAA;AAAA;AAAA;AAAA,gBADC,GAC+H,IAFhI,EAGD,KAAKf,KAAL,CAAWC,SAAX,GACC,KAAKD,KAAL,CAAWE,WAAX,CAAuBc,GAAvB,CAA2BC,IAAI,iBAAK,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEA,IAAI,CAACC,GAAL,CAASL,SAAT,CAAmBC,IAAtC;AAA4C,UAAA,IAAI,EAAEG,IAAI,CAACE,IAAvD;AAA6D,UAAA,IAAI,EAAEF,IAAI,CAACC,GAAL,CAASE,SAA5E;AAAuF,UAAA,GAAG,EAAEH,IAAI,CAACC,GAAL,CAASG;AAArG;AAAA;AAAA;AAAA;AAAA,gBAApC,CADD,GAC2J,IAJ1J;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AArC+B;;AAwClC,eAAe7B,GAAf","sourcesContent":["import React from 'react'\nimport './App.css';\nimport WeatherTile from './WeatherTile'\nimport SearchBar from './SearchBar'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      weatherData: null,\n      location: null\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://api.weatherapi.com/v1/forecast.json?key=6018bc6ca5bb4a4884c184418202812&q=Winnipeg&days=5')\n    .then(response => response.json())\n    .then(json => {\n      this.setState({\n        isLoading: true,\n        currentData: json.current,\n        weatherData: json.forecast.forecastday,\n      })\n    })\n  }\n  getLocation = (weather) => {\n    this.setState({location: weather})\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <SearchBar weatherCallBack={this.getLocation} />\n        <div className=\"Tiles\">\n        {this.state.isLoading ?\n        <WeatherTile icon={this.state.currentData.condition.icon} date={this.state.location} today={this.state.currentData.temp_c} /> : null}\n      {this.state.isLoading ?\n        this.state.weatherData.map(data => (<WeatherTile icon={data.day.condition.icon} date={data.date} high={data.day.maxtemp_c} low={data.day.mintemp_c}/>)) : null }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}