{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\PicsNNews\\\\News\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Headline from './Headline';\nimport('./News.css');\nexport default function News() {\n  _s();\n\n  const [newsJson, getNewsJson] = useState(null);\n  const [headlines, getHeadlines] = useState(null);\n  const [shownHeadlines, getShownHeadlines] = useState(null);\n  useEffect(() => {\n    GetNews();\n  }, []);\n  useEffect(() => {\n    if (headlines) {\n      let posts = [...headlines];\n\n      if (headlines.length >= 3) {\n        const indexes = [0, 1, 2];\n        const timeout = 500;\n        indexes.forEach(index => {\n          /*setTimeout(() => {\r\n            document\r\n                .getElementById(`headline${index}`)\r\n                .classList\r\n                .add('opacity0')\r\n          }, timeout*(index+1))*/\n        });\n        getHeadlines(posts.slice(3));\n      } else {\n        GetNews();\n      }\n    }\n  }, [headlines]);\n\n  const GetNews = () => {\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json').then(res => res.json()).then(newsLinks => {\n      let posts = [...newsLinks.data.children.slice(0, 24)];\n      getHeadlines(posts);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news\",\n    children: headlines ? headlines.slice(0, 3).map((headline, index) => {\n      return /*#__PURE__*/_jsxDEV(Headline, {\n        id: `headline${index}`,\n        title: headline.data.title,\n        subreddit: headline.data.subreddit_name_prefixed,\n        thumbnail: headline.data.thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(News, \"ZMFoY4dkCjvD9w3y0pi3KdjHDVw=\");\n\n_c = News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/PicsNNews/News/News.js"],"names":["React","useState","useEffect","Headline","News","newsJson","getNewsJson","headlines","getHeadlines","shownHeadlines","getShownHeadlines","GetNews","posts","length","indexes","timeout","forEach","index","slice","fetch","then","res","json","newsLinks","data","children","map","headline","title","subreddit_name_prefixed","thumbnail"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAQ,YAAR;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,IAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,SAAJ,EAAe;AACb,UAAIK,KAAK,GAAG,CAAC,GAAGL,SAAJ,CAAZ;;AACA,UAAIA,SAAS,CAACM,MAAV,IAAoB,CAAxB,EAA2B;AACzB,cAAMC,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB;AACA,cAAMC,OAAO,GAAG,GAAhB;AACAD,QAAAA,OAAO,CAACE,OAAR,CAAgBC,KAAK,IAAI;AACvB;AACV;AACA;AACA;AACA;AACA;AACS,SAPD;AAQAT,QAAAA,YAAY,CAACI,KAAK,CAACM,KAAN,CAAY,CAAZ,CAAD,CAAZ;AACD,OAZD,MAYO;AACLP,QAAAA,OAAO;AACR;AACF;AACF,GAnBQ,EAmBN,CAACJ,SAAD,CAnBM,CAAT;;AAqBA,QAAMI,OAAO,GAAG,MAAM;AACpBQ,IAAAA,KAAK,CAAC,2DAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,SAAS,IAAI;AACjB,UAAIX,KAAK,GAAG,CAAC,GAAGW,SAAS,CAACC,IAAV,CAAeC,QAAf,CAAwBP,KAAxB,CAA8B,CAA9B,EAAgC,EAAhC,CAAJ,CAAZ;AACCV,MAAAA,YAAY,CAACI,KAAD,CAAZ;AACF,KALD;AAMD,GAPD;;AASE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACCL,SAAS,GAAGA,SAAS,CAACW,KAAV,CAAgB,CAAhB,EAAkB,CAAlB,EAAqBQ,GAArB,CAAyB,CAACC,QAAD,EAAWV,KAAX,KAAqB;AACzD,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,WAAUA,KAAM,EAA/B;AAAkC,QAAA,KAAK,EAAEU,QAAQ,CAACH,IAAT,CAAcI,KAAvD;AAA8D,QAAA,SAAS,EAAED,QAAQ,CAACH,IAAT,CAAcK,uBAAvF;AAAgH,QAAA,SAAS,EAAEF,QAAQ,CAACH,IAAT,CAAcM;AAAzI;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFY,CAAH,GAEL;AAHL;AAAA;AAAA;AAAA;AAAA,UADF;AAOH;;GA9CuB1B,I;;KAAAA,I","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Headline from './Headline'\r\n\r\nimport ('./News.css')\r\n\r\nexport default function News() {\r\n  const [newsJson, getNewsJson] = useState(null);\r\n  const [headlines, getHeadlines] = useState(null);\r\n  const [shownHeadlines, getShownHeadlines] = useState(null)\r\n\r\n  useEffect(() => {\r\n    GetNews()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (headlines) {\r\n      let posts = [...headlines]\r\n      if (headlines.length >= 3) {\r\n        const indexes = [0, 1, 2];\r\n        const timeout = 500\r\n        indexes.forEach(index => {\r\n          /*setTimeout(() => {\r\n            document\r\n                .getElementById(`headline${index}`)\r\n                .classList\r\n                .add('opacity0')\r\n          }, timeout*(index+1))*/\r\n        })\r\n        getHeadlines(posts.slice(3,))\r\n      } else {\r\n        GetNews()\r\n      }\r\n    }\r\n  }, [headlines])\r\n\r\n  const GetNews = () => {\r\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json')\r\n    .then(res => res.json())\r\n    .then(newsLinks => {\r\n      let posts = [...newsLinks.data.children.slice(0,24)];\r\n       getHeadlines(posts);\r\n    })\r\n  }\r\n\r\n    return(\r\n      <div className=\"news\">\r\n      {headlines ? headlines.slice(0,3).map((headline, index) => {\r\n        return <Headline id={`headline${index}`} title={headline.data.title} subreddit={headline.data.subreddit_name_prefixed} thumbnail={headline.data.thumbnail} />\r\n      }) : null}\r\n      </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}