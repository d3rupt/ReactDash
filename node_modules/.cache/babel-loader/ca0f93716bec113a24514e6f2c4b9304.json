{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\PicsNNews\\\\News\\\\News.js\";\nimport React from 'react';\nimport Headline from './Headline';\nimport('./News.css');\nexport default class News extends React.Component {\n  constructor(props) {\n    super(props);\n    this.GetNews = this.GetNews.bind(this); //this.ShuffleNews = this.ShuffleNews.bind(this)\n\n    this.state = {\n      newsJson: null,\n      headlines: null\n    };\n  }\n\n  GetNews() {\n    fetch('https://old.reddit.com/user/d3RUPT/m/dashboard.json').then(res => res.json()).then(newsLinks => {\n      let posts = [...newsLinks.data.children];\n      this.setState({\n        headlines: posts\n      });\n      console.log('posts : ' + posts);\n      let popCounter = this.state.headlines.length;\n      const popPosts = setInterval(() => {});\n\n      for (var x = newsLinks.data.children.length; x > 0; x--) {\n        setTimeout(() => {\n          //posts.push(newsLinks.data.children[x]);\n          posts.pop();\n          this.setState({\n            headlines: posts\n          });\n        }, 5000);\n      }\n    });\n  }\n\n  componentDidUpdate() {//this.GetNews()\n    //this.ShuffleNews()\n  }\n\n  componentDidMount() {\n    this.GetNews();\n    const getNews = setInterval(this.GetNews, 600000);\n  }\n  /*async ShuffleNews() {\r\n    await this.GetNews();\r\n    console.log(this.state.headlines)\r\n    }*/\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news\",\n      children: this.state.headlines != null ? this.state.headlines.slice(0, 3).map(headline => {\n        return /*#__PURE__*/_jsxDEV(Headline, {\n          title: headline.data.title,\n          subreddit: headline.data.subreddit_name_prefixed,\n          thumbnail: headline.data.thumbnail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/**/","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/PicsNNews/News/News.js"],"names":["React","Headline","News","Component","constructor","props","GetNews","bind","state","newsJson","headlines","fetch","then","res","json","newsLinks","posts","data","children","setState","console","log","popCounter","length","popPosts","setInterval","x","setTimeout","pop","componentDidUpdate","componentDidMount","getNews","render","slice","map","headline","title","subreddit_name_prefixed","thumbnail"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAQ,YAAR;AAEA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf,CAFiB,CAGjB;;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AACDJ,EAAAA,OAAO,GAAG;AACRK,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,SAAS,IAAI;AACjB,UAAIC,KAAK,GAAG,CAAC,GAAGD,SAAS,CAACE,IAAV,CAAeC,QAAnB,CAAZ;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,SAAS,EAAEM;AADC,OAAd;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaL,KAAzB;AACA,UAAIM,UAAU,GAAG,KAAKd,KAAL,CAAWE,SAAX,CAAqBa,MAAtC;AACA,YAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM,CAElC,CAF2B,CAA5B;;AAGA,WAAK,IAAIC,CAAC,GAAGX,SAAS,CAACE,IAAV,CAAeC,QAAf,CAAwBK,MAArC,EAA6CG,CAAC,GAAG,CAAjD,EAAoDA,CAAC,EAArD,EAAyD;AACvDC,QAAAA,UAAU,CAAC,MAAM;AACf;AACAX,UAAAA,KAAK,CAACY,GAAN;AACA,eAAKT,QAAL,CAAc;AACZT,YAAAA,SAAS,EAAEM;AADC,WAAd;AAGD,SANS,EAMP,IANO,CAAV;AAOD;AACF,KAtBD;AAuBD;;AAEDa,EAAAA,kBAAkB,GAAG,CACnB;AACA;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,OAAL;AACA,UAAMyB,OAAO,GAAGN,WAAW,CAAC,KAAKnB,OAAN,EAAe,MAAf,CAA3B;AACD;AAED;AACF;AACA;AACA;;;AAEE0B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACC,KAAKxB,KAAL,CAAWE,SAAX,IAAwB,IAAxB,GAA+B,KAAKF,KAAL,CAAWE,SAAX,CAAqBuB,KAArB,CAA2B,CAA3B,EAA6B,CAA7B,EAAgCC,GAAhC,CAAoCC,QAAQ,IAAI;AAC9E,4BAAO,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,QAAQ,CAAClB,IAAT,CAAcmB,KAA/B;AAAsC,UAAA,SAAS,EAAED,QAAQ,CAAClB,IAAT,CAAcoB,uBAA/D;AAAwF,UAAA,SAAS,EAAEF,QAAQ,CAAClB,IAAT,CAAcqB;AAAjH;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAF+B,CAA/B,GAEI;AAHL;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA5D+C;AA8DlD","sourcesContent":["import React from 'react'\r\nimport Headline from './Headline'\r\n\r\nimport ('./News.css')\r\n\r\nexport default class News extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.GetNews = this.GetNews.bind(this)\r\n    //this.ShuffleNews = this.ShuffleNews.bind(this)\r\n\r\n    this.state = {\r\n      newsJson: null,\r\n      headlines: null\r\n    }\r\n  }\r\n  GetNews() {\r\n    fetch('https://old.reddit.com/user/d3RUPT/m/dashboard.json')\r\n    .then(res => res.json())\r\n    .then(newsLinks => {\r\n      let posts = [...newsLinks.data.children];\r\n      this.setState({\r\n        headlines: posts\r\n      })\r\n\r\n      console.log('posts : ' + posts)\r\n      let popCounter = this.state.headlines.length\r\n      const popPosts = setInterval(() => {\r\n\r\n      })\r\n      for (var x = newsLinks.data.children.length; x > 0; x--) {\r\n        setTimeout(() => {\r\n          //posts.push(newsLinks.data.children[x]);\r\n          posts.pop();\r\n          this.setState({\r\n            headlines: posts\r\n          })\r\n        }, 5000)\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //this.GetNews()\r\n    //this.ShuffleNews()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.GetNews()\r\n    const getNews = setInterval(this.GetNews, 600000);\r\n  }\r\n\r\n  /*async ShuffleNews() {\r\n    await this.GetNews();\r\n    console.log(this.state.headlines)\r\n\r\n  }*/\r\n  render() {\r\n    return(\r\n      <div className=\"news\">\r\n      {this.state.headlines != null ? this.state.headlines.slice(0,3).map(headline => {\r\n        return <Headline title={headline.data.title} subreddit={headline.data.subreddit_name_prefixed} thumbnail={headline.data.thumbnail} />\r\n      }) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n/**/\r\n"]},"metadata":{},"sourceType":"module"}