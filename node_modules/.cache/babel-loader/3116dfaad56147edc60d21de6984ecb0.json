{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\PicsNNews\\\\News\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Headline from './Headline';\nimport('./News.css');\nexport default function News() {\n  _s();\n\n  const [newsJson, getNewsJson] = useState(null);\n  const [headlines, getHeadlines] = useState(null);\n  const [shownHeadlines, getShownHeadlines] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [animConsts, setAnimConsts] = useState({\n    indexes: [0, 1, 2],\n    timeout: 250\n  });\n  useEffect(() => {\n    GetNews();\n  }, []);\n  useEffect(() => {\n    animConsts.indexes.forEach(index => {\n      setTimeout(() => {\n        var _document, _document$getElementB;\n\n        (_document = document) === null || _document === void 0 ? void 0 : (_document$getElementB = _document.getElementById(`headline${index}`)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.classList.remove('opacity0');\n      }, animConsts.timeout * (index + 1));\n    });\n  }, [shownHeadlines]);\n  useEffect(() => {\n    setInterval(() => {\n      if ((headlines === null || headlines === void 0 ? void 0 : headlines.length) >= 3) {\n        animConsts.indexes.forEach(index => {\n          setTimeout(() => {\n            var _document2, _document2$getElement, _document2$getElement2;\n\n            (_document2 = document) === null || _document2 === void 0 ? void 0 : (_document2$getElement = _document2.getElementById(`headline${index}`)) === null || _document2$getElement === void 0 ? void 0 : (_document2$getElement2 = _document2$getElement.classList) === null || _document2$getElement2 === void 0 ? void 0 : _document2$getElement2.add('opacity0');\n          }, animConsts.timeout * (index + 1));\n        });\n        setTimeout(() => {\n          getShownHeadlines(headlines.slice(3));\n        }, 1500);\n      } else {\n        alert('NAH');\n        GetNews();\n      }\n    }, 1000 * 10);\n  }, [headlines]);\n\n  const GetNews = () => {\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json').then(res => res.json()).then(newsLinks => {\n      let posts = [...newsLinks.data.children.slice(0, 24)];\n      getHeadlines(posts);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news\",\n    children: headlines ? headlines.slice(0, 3).map((headline, index) => {\n      return /*#__PURE__*/_jsxDEV(Headline, {\n        id: `headline${index}`,\n        title: headline.data.title,\n        subreddit: headline.data.subreddit_name_prefixed,\n        thumbnail: headline.data.thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(News, \"X8p9NokeuyX1/YBs1Hao2MV/b3o=\");\n\n_c = News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/PicsNNews/News/News.js"],"names":["React","useState","useEffect","Headline","News","newsJson","getNewsJson","headlines","getHeadlines","shownHeadlines","getShownHeadlines","visible","setVisible","animConsts","setAnimConsts","indexes","timeout","GetNews","forEach","index","setTimeout","document","getElementById","classList","remove","setInterval","length","add","slice","alert","fetch","then","res","json","newsLinks","posts","data","children","map","headline","title","subreddit_name_prefixed","thumbnail"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Headline from './Headline'\r\n\r\nimport ('./News.css')\r\n\r\nexport default function News() {\r\n  const [newsJson, getNewsJson] = useState(null);\r\n  const [headlines, getHeadlines] = useState(null);\r\n  const [shownHeadlines, getShownHeadlines] = useState(null)\r\n  const [visible, setVisible] = useState(false)\r\n  const [animConsts, setAnimConsts] = useState({indexes: [0, 1, 2], timeout: 250})\r\n  useEffect(() => {\r\n    GetNews()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    animConsts.indexes.forEach(index => {\r\n      setTimeout(() => {\r\n        document?.getElementById(`headline${index}`)?.classList.remove('opacity0')\r\n      }, animConsts.timeout*(index+1))\r\n    })\r\n  }, [shownHeadlines]);\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      if (headlines?.length >= 3) {\r\n        animConsts.indexes.forEach(index => {\r\n          setTimeout(() => {\r\n            document?.getElementById(`headline${index}`)?.classList?.add('opacity0')\r\n          }, animConsts.timeout*(index+1))\r\n        })\r\n        setTimeout(() => {\r\n          getShownHeadlines(headlines.slice(3,))\r\n        }, 1500)\r\n      } else {\r\n        alert('NAH')\r\n        GetNews()\r\n      }\r\n    }, 1000 * 10)\r\n  }, [headlines])\r\n\r\n  const GetNews = () => {\r\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json')\r\n    .then(res => res.json())\r\n    .then(newsLinks => {\r\n      let posts = [...newsLinks.data.children.slice(0,24)];\r\n       getHeadlines(posts);\r\n    })\r\n  }\r\n\r\n    return(\r\n      <div className=\"news\">\r\n      {headlines ? headlines.slice(0,3).map((headline, index) => {\r\n        return <Headline id={`headline${index}`} title={headline.data.title} subreddit={headline.data.subreddit_name_prefixed} thumbnail={headline.data.thumbnail} />\r\n      }) : null}\r\n      </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}