{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\CalendarComponents\\\\Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport './Calendar.css';\nimport CalendarDay from './CalendarDay';\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.GetEvents = this.GetEvents.bind(this);\n  }\n\n  GetEvents() {\n    let thisWeek = {\n      0: [],\n      1: [],\n      2: [],\n      3: [],\n      4: [],\n      5: [],\n      6: []\n    };\n    let today = new Date();\n    let oneWeek = new Date();\n    oneWeek.setDate(oneWeek.getDate() + 6);\n    fetch(`https://www.googleapis.com/calendar/v3/calendars/thdnkns@gmail.com/events?singleEvents=True&orderBy=startTime&timeMin=${today.toISOString()}&timeMax=${oneWeek.toISOString()}&key=AIzaSyDZgdchyvtfLwtT2s1JH5dxgnwd-2nI2dw`).then(res => res.json()).then(events => {\n      let eventsList = [...events.items];\n      console.log(typeof events.items[0].start.date);\n      /*eventsList.forEach(event => {\r\n        if (new Date(Date.parse(event.start)).getDate() == today.getDate()) {\r\n          thisWeek.0.push(event)\r\n        } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 1) {\r\n          thisWeek.1.push(event)\r\n        } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 2) {\r\n          thisWeek.2.push(event)\r\n        } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 3) {\r\n          thisWeek.3.push(event)\r\n        } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 4) {\r\n          thisWeek.4.push(event)\r\n        } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 5) {\r\n          thisWeek.5.push(event)\r\n        } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 6) {\r\n          thisWeek.6.push(event)\r\n        }\r\n      })*/\n    });\n  }\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    this.GetEvents();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDiv\",\n      children: [/*#__PURE__*/_jsxDEV(CalendarDay, {\n        className: this.props.isDay == 0 ? 'calNight' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        className: this.props.isDay == 0 ? 'calNight' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        className: this.props.isDay == 0 ? 'calNight' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        className: this.props.isDay == 0 ? 'calNight' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        className: this.props.isDay == 0 ? 'calNight' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        className: this.props.isDay == 0 ? 'calNight' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n        className: this.props.isDay == 0 ? 'calNight' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/CalendarComponents/Calendar.js"],"names":["React","moment","CalendarDay","Calendar","Component","constructor","props","GetEvents","bind","thisWeek","today","Date","oneWeek","setDate","getDate","fetch","toISOString","then","res","json","events","eventsList","items","console","log","start","date","componentDidUpdate","componentDidMount","render","isDay"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport moment from 'moment'\r\nimport './Calendar.css'\r\nimport CalendarDay from './CalendarDay'\r\n\r\nexport default class Calendar extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.GetEvents = this.GetEvents.bind(this)\r\n  }\r\n\r\n\r\n  GetEvents() {\r\n    let thisWeek = {\r\n      0: [],\r\n      1: [],\r\n      2: [],\r\n      3: [],\r\n      4: [],\r\n      5: [],\r\n      6: []\r\n    }\r\n    let today = new Date()\r\n    let oneWeek = new Date()\r\n    oneWeek.setDate(oneWeek.getDate() + 6)\r\n    fetch(`https://www.googleapis.com/calendar/v3/calendars/thdnkns@gmail.com/events?singleEvents=True&orderBy=startTime&timeMin=${today.toISOString()}&timeMax=${oneWeek.toISOString()}&key=AIzaSyDZgdchyvtfLwtT2s1JH5dxgnwd-2nI2dw`)\r\n      .then(res => res.json())\r\n      .then(events => {\r\n        let eventsList = [...events.items]\r\n        console.log(typeof(events.items[0].start.date))\r\n        /*eventsList.forEach(event => {\r\n          if (new Date(Date.parse(event.start)).getDate() == today.getDate()) {\r\n            thisWeek.0.push(event)\r\n          } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 1) {\r\n            thisWeek.1.push(event)\r\n          } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 2) {\r\n            thisWeek.2.push(event)\r\n          } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 3) {\r\n            thisWeek.3.push(event)\r\n          } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 4) {\r\n            thisWeek.4.push(event)\r\n          } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 5) {\r\n            thisWeek.5.push(event)\r\n          } else if (new Date(Date.parse(event.start)).getDate() == today.getDate() + 6) {\r\n            thisWeek.6.push(event)\r\n          }\r\n        })*/\r\n      })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.GetEvents()\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <div className=\"calendarDiv\">\r\n      <CalendarDay className={this.props.isDay == 0? 'calNight' : ''}/>\r\n      <CalendarDay className={this.props.isDay == 0? 'calNight' : ''}/>\r\n      <CalendarDay className={this.props.isDay == 0? 'calNight' : ''}/>\r\n      <CalendarDay className={this.props.isDay == 0? 'calNight' : ''}/>\r\n      <CalendarDay className={this.props.isDay == 0? 'calNight' : ''}/>\r\n      <CalendarDay className={this.props.isDay == 0? 'calNight' : ''}/>\r\n      <CalendarDay className={this.props.isDay == 0? 'calNight' : ''}/>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}