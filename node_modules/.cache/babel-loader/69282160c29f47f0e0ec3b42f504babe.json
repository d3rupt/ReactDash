{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport suncalc from 'suncalc';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport './App.css';\nimport WeatherSection from './WeatherSection';\nimport Calendar from './CalendarComponents/Calendar';\nimport PicsNNews from './PicsNNews/PicsNNews';\nconst moment = extendMoment(Moment);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLocation = weather => {\n      console.log('APPLEVEL: ' + weather);\n      this.setState({\n        location: weather\n      }, this.RequestWeather);\n    };\n\n    this.state = {\n      isLoading: false,\n      weatherData: null,\n      location: null //isDay: 1\n\n    };\n    this.isDay = this.isDay.bind(this);\n  }\n\n  isDay() {\n    /*this.setState({\n      isDay: 0\n    })*/\n    let skyDay = ['sunrise', 'between4', 'sunriseEnd', 'between5', 'goldenHourEnd', 'between6', 'solarNoon', 'between7', 'goldenHour', 'between8', 'sunsetStart', 'between9']; // const sunTimes = suncalc.getTimes(new Date(), 49.895077, -97.138451);\n\n    if (document.getElementById('sky').classList.length != 0) {\n      if (skyDay.includes(document.getElementById('sky').classList[0])) {\n        //console.log('IS WITHIN RANGE')\n        if (this.state.isDay != 1) {\n          this.setState({\n            isDay: 1\n          });\n        }\n      } else {\n        //console.log('IS NOT WITHIN RANGE')\n        if (this.state.isDay != 0) {\n          this.setState({\n            isDay: 0\n          });\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    /*this.setState({\n      isDay: 1\n    })*/\n    this.isDay();\n    let isDayInterval = setInterval(this.isDay, 10000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.state.isDay == 0 ? 'App opacity3' : 'App',\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        isDay: this.state.isDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherSection, {\n        isDay: this.state.isDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PicsNNews, {\n        isDay: this.state.isDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n/*\n*/","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/App.js"],"names":["React","suncalc","Moment","extendMoment","WeatherSection","Calendar","PicsNNews","moment","App","Component","constructor","props","getLocation","weather","console","log","setState","location","RequestWeather","state","isLoading","weatherData","isDay","bind","skyDay","document","getElementById","classList","length","includes","componentDidMount","isDayInterval","setInterval","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,MAAMC,MAAM,GAAGJ,YAAY,CAACD,MAAD,CAA3B;;AAEA,MAAMM,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,WAXmB,GAWJC,OAAD,IAAa;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,OAA3B;AACA,WAAKG,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEJ;AAAX,OAAd,EAAmC,KAAKK,cAAxC;AACD,KAdkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXJ,MAAAA,QAAQ,EAAE,IAHC,CAIX;;AAJW,KAAb;AAMA,SAAKK,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAODD,EAAAA,KAAK,GAAG;AACN;AACJ;AACA;AACI,QAAIE,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,YAAxB,EAAsC,UAAtC,EAAkD,eAAlD,EAAmE,UAAnE,EAA+E,WAA/E,EAA4F,UAA5F,EAAwG,YAAxG,EAAsH,UAAtH,EAAkI,aAAlI,EAAiJ,UAAjJ,CAAb,CAJM,CAKN;;AACA,QAAIC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,SAA/B,CAAyCC,MAAzC,IAAmD,CAAvD,EAA0D;AACxD,UAAIJ,MAAM,CAACK,QAAP,CAAgBJ,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,SAA/B,CAAyC,CAAzC,CAAhB,CAAJ,EAAkE;AAClE;AACA,YAAI,KAAKR,KAAL,CAAWG,KAAX,IAAoB,CAAxB,EAA2B;AACzB,eAAKN,QAAL,CAAc;AACZM,YAAAA,KAAK,EAAE;AADK,WAAd;AAGD;AACF,OAPC,MAOK;AACL;AACA,YAAI,KAAKH,KAAL,CAAWG,KAAX,IAAoB,CAAxB,EAA2B;AACzB,eAAKN,QAAL,CAAc;AACZM,YAAAA,KAAK,EAAE;AADK,WAAd;AAGD;AACF;AACF;AACF;;AAECQ,EAAAA,iBAAiB,GAAG;AAClB;AACJ;AACA;AACI,SAAKR,KAAL;AACA,QAAIS,aAAa,GAAGC,WAAW,CAAC,KAAKV,KAAN,EAAa,KAAb,CAA/B;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE,KAAKd,KAAL,CAAWG,KAAX,IAAoB,CAApB,GAAwB,cAAxB,GAAyC,KAAzD;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA3D+B;;AA8DlC,eAAed,GAAf;AACA;AACA","sourcesContent":["import React from 'react'\nimport suncalc from 'suncalc'\nimport Moment from 'moment'\nimport { extendMoment } from 'moment-range';\n\nimport './App.css';\nimport WeatherSection from './WeatherSection'\nimport Calendar from './CalendarComponents/Calendar';\nimport PicsNNews from './PicsNNews/PicsNNews'\n\nconst moment = extendMoment(Moment);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      weatherData: null,\n      location: null\n      //isDay: 1\n    }\n    this.isDay = this.isDay.bind(this)\n  }\n\n  getLocation = (weather) => {\n    console.log('APPLEVEL: ' + weather)\n    this.setState({location: weather}, this.RequestWeather)\n  }\n\n  isDay() {\n    /*this.setState({\n      isDay: 0\n    })*/\n    let skyDay = ['sunrise', 'between4', 'sunriseEnd', 'between5', 'goldenHourEnd', 'between6', 'solarNoon', 'between7', 'goldenHour', 'between8', 'sunsetStart', 'between9']\n    // const sunTimes = suncalc.getTimes(new Date(), 49.895077, -97.138451);\n    if (document.getElementById('sky').classList.length != 0) {\n      if (skyDay.includes(document.getElementById('sky').classList[0])) {\n      //console.log('IS WITHIN RANGE')\n      if (this.state.isDay != 1) {\n        this.setState({\n          isDay: 1\n        })\n      }\n    } else {\n      //console.log('IS NOT WITHIN RANGE')\n      if (this.state.isDay != 0) {\n        this.setState({\n          isDay: 0\n        })\n      }\n    }\n  }\n}\n\n  componentDidMount() {\n    /*this.setState({\n      isDay: 1\n    })*/\n    this.isDay()\n    let isDayInterval = setInterval(this.isDay, 10000)\n  }\n\n  render() {\n    return (\n      <div className={this.state.isDay == 0 ? 'App opacity3' : 'App'}>\n        <Calendar isDay={this.state.isDay}/>\n        <WeatherSection isDay={this.state.isDay}/>\n        <PicsNNews isDay={this.state.isDay}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n/*\n*/\n"]},"metadata":{},"sourceType":"module"}