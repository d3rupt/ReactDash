{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport WeatherTile from './WeatherTile';\nimport SearchBar from './SearchBar';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.RequestWeather = () => {\n      fetch(`http://api.weatherapi.com/v1/forecast.json?key=6018bc6ca5bb4a4884c184418202812&q=${this.state.location}&days=5`).then(response => response.json()).then(json => {\n        this.setState({\n          isLoading: true,\n          currentData: json.current,\n          weatherData: json.forecast.forecastday\n        });\n      }).catch(() => {\n        console.log('error');\n      });\n    };\n\n    this.getLocation = weather => {\n      console.log('APPLEVEL: ' + weather);\n      this.setState({\n        location: weather\n      }, this.RequestWeather);\n    };\n\n    this.state = {\n      isLoading: false,\n      weatherData: null,\n      location: null\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [{\n          title: 'TEST',\n          date: '2020-12-31'\n        }],\n        aspectRatio: \"3\",\n        contentHeight: \"300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/weather/src/App.js"],"names":["React","WeatherTile","SearchBar","FullCalendar","dayGridPlugin","App","Component","constructor","props","RequestWeather","fetch","state","location","then","response","json","setState","isLoading","currentData","current","weatherData","forecast","forecastday","catch","console","log","getLocation","weather","componentDidMount","render","title","date"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,cAXmB,GAWF,MAAM;AACrBC,MAAAA,KAAK,CAAE,oFAAmF,KAAKC,KAAL,CAAWC,QAAS,SAAzG,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AACZC,UAAAA,SAAS,EAAE,IADC;AAEZC,UAAAA,WAAW,EAAEH,IAAI,CAACI,OAFN;AAGZC,UAAAA,WAAW,EAAEL,IAAI,CAACM,QAAL,CAAcC;AAHf,SAAd;AAKC,OARH,EASEC,KATF,CASQ,MAAM;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAXD;AAYD,KAxBkB;;AAAA,SAyBnBC,WAzBmB,GAyBJC,OAAD,IAAa;AACzBH,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeE,OAA3B;AACA,WAAKX,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAAEe;AAAX,OAAd,EAAmC,KAAKlB,cAAxC;AACD,KA5BkB;;AAEjB,SAAKE,KAAL,GAAa;AACXM,MAAAA,SAAS,EAAE,KADA;AAEXG,MAAAA,WAAW,EAAE,IAFF;AAGXR,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDgB,EAAAA,iBAAiB,GAAG,CACrB;;AAmBCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACA,QAAC,YAAD;AACE,QAAA,OAAO,EAAE,CAAEzB,aAAF,CADX;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,MAAM,EAAE,CAAC;AAAC0B,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,IAAI,EAAC;AAApB,SAAD,CAHV;AAIE,QAAA,WAAW,EAAC,GAJd;AAKE,QAAA,aAAa,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA5C+B;;AA+ClC,eAAe1B,GAAf","sourcesContent":["import React from 'react'\nimport './App.css';\nimport WeatherTile from './WeatherTile'\nimport SearchBar from './SearchBar'\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      weatherData: null,\n      location: null\n    }\n  }\n\n  componentDidMount() {\n}\n  RequestWeather = () => {\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=6018bc6ca5bb4a4884c184418202812&q=${this.state.location}&days=5`)\n    .then(response => response.json())\n    .then(json => {\n      this.setState({\n        isLoading: true,\n        currentData: json.current,\n        weatherData: json.forecast.forecastday,\n        })\n      }\n    ).catch(() => {\n      console.log('error')\n    })\n  }\n  getLocation = (weather) => {\n    console.log('APPLEVEL: ' + weather)\n    this.setState({location: weather}, this.RequestWeather)\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <FullCalendar\n        plugins={[ dayGridPlugin ]}\n        initialView=\"dayGridMonth\"\n        events={[{title:'TEST', date:'2020-12-31'}]}\n        aspectRatio='3'\n        contentHeight='300px'\n      />\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}