{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\DataLayer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react';\nexport const DataLayerContext = /*#__PURE__*/createContext();\nexport const DataLayer = ({\n  initialState,\n  reducer,\n  children\n}) => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(DataLayerContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataLayer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = DataLayer;\nexport const useDataLayerValue = () => {\n  _s2();\n\n  return useContext(DataLayerContext);\n};\n\n_s2(useDataLayerValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DataLayer\");","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/DataLayer.js"],"names":["React","createContext","useContext","useReducer","DataLayerContext","DataLayer","initialState","reducer","children","useDataLayerValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAEIC,aAFJ,EAGIC,UAHJ,EAIIC,UAJJ,QAKO,OALP;AAOA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,EAAtC;AAEP,OAAO,MAAMI,SAAS,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,CAAD;AAAA;;AAAA,sBACrB,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEL,UAAU,CAACI,OAAD,EAAUD,YAAV,CAA5C;AAAA,cACKE;AADL;AAAA;AAAA;AAAA;AAAA,UADqB;AAAA,CAAlB;;GAAMH,S;;KAAAA,S;AAMb,OAAO,MAAMI,iBAAiB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,gBAAD,CAAhB;AAAA,CAA1B;;IAAMK,iB","sourcesContent":["import React,\r\n{\r\n    createContext,\r\n    useContext,\r\n    useReducer\r\n} from 'react';\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({initialState, reducer, children }) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext)\r\n"]},"metadata":{},"sourceType":"module"}