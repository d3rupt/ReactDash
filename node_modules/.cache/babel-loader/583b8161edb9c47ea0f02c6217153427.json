{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Config = require(\"../../../apiGoogleconfig.json\");\n\nvar ApiCalendar = function () {\n  function ApiCalendar() {\n    _classCallCheck(this, ApiCalendar);\n\n    this.sign = false;\n    this.gapi = null;\n    this.onLoadCallback = null;\n    this.calendar = 'primary';\n\n    try {\n      this.updateSigninStatus = this.updateSigninStatus.bind(this);\n      this.initClient = this.initClient.bind(this);\n      this.handleSignoutClick = this.handleSignoutClick.bind(this);\n      this.handleAuthClick = this.handleAuthClick.bind(this);\n      this.createEvent = this.createEvent.bind(this);\n      this.listUpcomingEvents = this.listUpcomingEvents.bind(this);\n      this.createEventFromNow = this.createEventFromNow.bind(this);\n      this.listenSign = this.listenSign.bind(this);\n      this.onLoad = this.onLoad.bind(this);\n      this.setCalendar = this.setCalendar.bind(this);\n      this.updateEvent = this.updateEvent.bind(this);\n      this.handleClientLoad();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  /**\n   * Update connection status.\n   * @param {boolean} isSignedIn\n   */\n\n\n  _createClass(ApiCalendar, [{\n    key: 'updateSigninStatus',\n    value: function updateSigninStatus(isSignedIn) {\n      this.sign = isSignedIn;\n    }\n    /**\n     * Auth to the google Api.\n     */\n\n  }, {\n    key: 'initClient',\n    value: function initClient() {\n      var _this = this;\n\n      this.gapi = window['gapi'];\n      this.gapi.client.init(Config).then(function () {\n        // Listen for sign-in state changes.\n        _this.gapi.auth2.getAuthInstance().isSignedIn.listen(_this.updateSigninStatus); // Handle the initial sign-in state.\n\n\n        _this.updateSigninStatus(_this.gapi.auth2.getAuthInstance().isSignedIn.get());\n\n        if (_this.onLoadCallback) {\n          _this.onLoadCallback();\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n    /**\n     * Init Google Api\n     * And create gapi in global\n     */\n\n  }, {\n    key: 'handleClientLoad',\n    value: function handleClientLoad() {\n      var _this2 = this;\n\n      this.gapi = window['gapi'];\n      var script = document.createElement(\"script\");\n      script.src = \"https://apis.google.com/js/api.js\";\n      document.body.appendChild(script);\n\n      script.onload = function () {\n        window['gapi'].load('client:auth2', _this2.initClient);\n      };\n    }\n    /**\n     * Sign in Google user account\n     */\n\n  }, {\n    key: 'handleAuthClick',\n    value: function handleAuthClick() {\n      if (this.gapi) {\n        this.gapi.auth2.getAuthInstance().signIn();\n      } else {\n        console.log(\"Error: this.gapi not loaded\");\n      }\n    }\n    /**\n     * Set the default attribute calendar\n     * @param {string} newCalendar\n     */\n\n  }, {\n    key: 'setCalendar',\n    value: function setCalendar(newCalendar) {\n      this.calendar = newCalendar;\n    }\n    /**\n     * Execute the callback function when a user is disconnected or connected with the sign status.\n     * @param callback\n     */\n\n  }, {\n    key: 'listenSign',\n    value: function listenSign(callback) {\n      if (this.gapi) {\n        this.gapi.auth2.getAuthInstance().isSignedIn.listen(callback);\n      } else {\n        console.log(\"Error: this.gapi not loaded\");\n      }\n    }\n    /**\n     * Execute the callback function when gapi is loaded\n     * @param callback\n     */\n\n  }, {\n    key: 'onLoad',\n    value: function onLoad(callback) {\n      if (this.gapi) {\n        callback();\n      } else {\n        this.onLoadCallback = callback;\n      }\n    }\n    /**\n     * Sign out user google account\n     */\n\n  }, {\n    key: 'handleSignoutClick',\n    value: function handleSignoutClick() {\n      if (this.gapi) {\n        this.gapi.auth2.getAuthInstance().signOut();\n      } else {\n        console.log(\"Error: this.gapi not loaded\");\n      }\n    }\n    /**\n     * List all events in the calendar\n     * @param {number} maxResults to see\n     * @param {string} calendarId to see by default use the calendar attribute\n     * @returns {any}\n     */\n\n  }, {\n    key: 'listUpcomingEvents',\n    value: function listUpcomingEvents(maxResults) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.list({\n          'calendarId': calendarId,\n          'timeMin': new Date().toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': maxResults,\n          'orderBy': 'startTime'\n        });\n      } else {\n        console.log(\"Error: this.gapi not loaded\");\n        return false;\n      }\n    }\n    /**\n     * Create an event from the current time for a certain period\n     * @param {number} time in minutes for the event\n     * @param {string} summary of the event\n     * @param {string} description of the event\n     * @param {string} calendarId\n     * @returns {any}\n     */\n\n  }, {\n    key: 'createEventFromNow',\n    value: function createEventFromNow(_ref) {\n      var time = _ref.time,\n          summary = _ref.summary,\n          _ref$description = _ref.description,\n          description = _ref$description === undefined ? '' : _ref$description;\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n      var event = {\n        summary: summary,\n        description: description,\n        start: {\n          dateTime: new Date().toISOString(),\n          timeZone: \"Europe/Paris\"\n        },\n        end: {\n          dateTime: new Date(new Date().getTime() + time * 60000),\n          timeZone: \"Europe/Paris\"\n        }\n      };\n      return this.gapi.client.calendar.events.insert({\n        'calendarId': calendarId,\n        'resource': event\n      });\n    }\n    /**\n     * Create Calendar event\n     * @param {string} calendarId for the event.\n     * @param {object} event with start and end dateTime\n     * @returns {any}\n     */\n\n  }, {\n    key: 'createEvent',\n    value: function createEvent(event) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n      return this.gapi.client.calendar.events.insert({\n        'calendarId': calendarId,\n        'resource': event\n      });\n    }\n  }, {\n    key: 'updateEvent',\n    value: function updateEvent(event, eventId, calendarId = this.calendar) {\n      return this.gapi.client.calendar.events.patch({\n        calendarId,\n        eventId,\n        'resource': event\n      });\n    }\n  }]);\n\n  return ApiCalendar;\n}();\n\nvar apiCalendar = void 0;\n\ntry {\n  apiCalendar = new ApiCalendar();\n} catch (e) {\n  console.log(e);\n}\n\nexports.default = apiCalendar;","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/node_modules/react-google-calendar-api/build/ApiCalendar.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","Config","require","ApiCalendar","sign","gapi","onLoadCallback","calendar","updateSigninStatus","bind","initClient","handleSignoutClick","handleAuthClick","createEvent","listUpcomingEvents","createEventFromNow","listenSign","onLoad","setCalendar","updateEvent","handleClientLoad","e","console","log","isSignedIn","_this","window","client","init","then","auth2","getAuthInstance","listen","get","catch","_this2","script","document","createElement","src","body","appendChild","onload","load","signIn","newCalendar","callback","signOut","maxResults","calendarId","arguments","undefined","events","list","Date","toISOString","_ref","time","summary","_ref$description","description","event","start","dateTime","timeZone","end","getTime","insert","eventId","patch","apiCalendar","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Config = require(\"../../../apiGoogleconfig.json\");\n\nvar ApiCalendar = function () {\n    function ApiCalendar() {\n        _classCallCheck(this, ApiCalendar);\n\n        this.sign = false;\n        this.gapi = null;\n        this.onLoadCallback = null;\n        this.calendar = 'primary';\n        try {\n            this.updateSigninStatus = this.updateSigninStatus.bind(this);\n            this.initClient = this.initClient.bind(this);\n            this.handleSignoutClick = this.handleSignoutClick.bind(this);\n            this.handleAuthClick = this.handleAuthClick.bind(this);\n            this.createEvent = this.createEvent.bind(this);\n            this.listUpcomingEvents = this.listUpcomingEvents.bind(this);\n            this.createEventFromNow = this.createEventFromNow.bind(this);\n            this.listenSign = this.listenSign.bind(this);\n            this.onLoad = this.onLoad.bind(this);\n            this.setCalendar = this.setCalendar.bind(this);\n            this.updateEvent = this.updateEvent.bind(this);\n            this.handleClientLoad();\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    /**\n     * Update connection status.\n     * @param {boolean} isSignedIn\n     */\n\n\n    _createClass(ApiCalendar, [{\n        key: 'updateSigninStatus',\n        value: function updateSigninStatus(isSignedIn) {\n            this.sign = isSignedIn;\n        }\n        /**\n         * Auth to the google Api.\n         */\n\n    }, {\n        key: 'initClient',\n        value: function initClient() {\n            var _this = this;\n\n            this.gapi = window['gapi'];\n            this.gapi.client.init(Config).then(function () {\n                // Listen for sign-in state changes.\n                _this.gapi.auth2.getAuthInstance().isSignedIn.listen(_this.updateSigninStatus);\n                // Handle the initial sign-in state.\n                _this.updateSigninStatus(_this.gapi.auth2.getAuthInstance().isSignedIn.get());\n                if (_this.onLoadCallback) {\n                    _this.onLoadCallback();\n                }\n            }).catch(function (e) {\n                console.log(e);\n            });\n        }\n        /**\n         * Init Google Api\n         * And create gapi in global\n         */\n\n    }, {\n        key: 'handleClientLoad',\n        value: function handleClientLoad() {\n            var _this2 = this;\n\n            this.gapi = window['gapi'];\n            var script = document.createElement(\"script\");\n            script.src = \"https://apis.google.com/js/api.js\";\n            document.body.appendChild(script);\n            script.onload = function () {\n                window['gapi'].load('client:auth2', _this2.initClient);\n            };\n        }\n        /**\n         * Sign in Google user account\n         */\n\n    }, {\n        key: 'handleAuthClick',\n        value: function handleAuthClick() {\n            if (this.gapi) {\n                this.gapi.auth2.getAuthInstance().signIn();\n            } else {\n                console.log(\"Error: this.gapi not loaded\");\n            }\n        }\n        /**\n         * Set the default attribute calendar\n         * @param {string} newCalendar\n         */\n\n    }, {\n        key: 'setCalendar',\n        value: function setCalendar(newCalendar) {\n            this.calendar = newCalendar;\n        }\n        /**\n         * Execute the callback function when a user is disconnected or connected with the sign status.\n         * @param callback\n         */\n\n    }, {\n        key: 'listenSign',\n        value: function listenSign(callback) {\n            if (this.gapi) {\n                this.gapi.auth2.getAuthInstance().isSignedIn.listen(callback);\n            } else {\n                console.log(\"Error: this.gapi not loaded\");\n            }\n        }\n        /**\n         * Execute the callback function when gapi is loaded\n         * @param callback\n         */\n\n    }, {\n        key: 'onLoad',\n        value: function onLoad(callback) {\n            if (this.gapi) {\n                callback();\n            } else {\n                this.onLoadCallback = callback;\n            }\n        }\n        /**\n         * Sign out user google account\n         */\n\n    }, {\n        key: 'handleSignoutClick',\n        value: function handleSignoutClick() {\n            if (this.gapi) {\n                this.gapi.auth2.getAuthInstance().signOut();\n            } else {\n                console.log(\"Error: this.gapi not loaded\");\n            }\n        }\n        /**\n         * List all events in the calendar\n         * @param {number} maxResults to see\n         * @param {string} calendarId to see by default use the calendar attribute\n         * @returns {any}\n         */\n\n    }, {\n        key: 'listUpcomingEvents',\n        value: function listUpcomingEvents(maxResults) {\n            var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n            if (this.gapi) {\n                return this.gapi.client.calendar.events.list({\n                    'calendarId': calendarId,\n                    'timeMin': new Date().toISOString(),\n                    'showDeleted': false,\n                    'singleEvents': true,\n                    'maxResults': maxResults,\n                    'orderBy': 'startTime'\n                });\n            } else {\n                console.log(\"Error: this.gapi not loaded\");\n                return false;\n            }\n        }\n        /**\n         * Create an event from the current time for a certain period\n         * @param {number} time in minutes for the event\n         * @param {string} summary of the event\n         * @param {string} description of the event\n         * @param {string} calendarId\n         * @returns {any}\n         */\n\n    }, {\n        key: 'createEventFromNow',\n        value: function createEventFromNow(_ref) {\n            var time = _ref.time,\n                summary = _ref.summary,\n                _ref$description = _ref.description,\n                description = _ref$description === undefined ? '' : _ref$description;\n            var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n            var event = {\n                summary: summary,\n                description: description,\n                start: {\n                    dateTime: new Date().toISOString(),\n                    timeZone: \"Europe/Paris\"\n                },\n                end: {\n                    dateTime: new Date(new Date().getTime() + time * 60000),\n                    timeZone: \"Europe/Paris\"\n                }\n            };\n            return this.gapi.client.calendar.events.insert({\n                'calendarId': calendarId,\n                'resource': event\n            });\n        }\n        /**\n         * Create Calendar event\n         * @param {string} calendarId for the event.\n         * @param {object} event with start and end dateTime\n         * @returns {any}\n         */\n\n    }, {\n        key: 'createEvent',\n        value: function createEvent(event) {\n            var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n            return this.gapi.client.calendar.events.insert({\n                'calendarId': calendarId,\n                'resource': event\n            });\n        }\n    }, {\n        key: 'updateEvent',\n        value: function updateEvent(event, eventId, calendarId = this.calendar) {\n            return this.gapi.client.calendar.events.patch({\n                calendarId,\n                eventId,\n                'resource': event,\n            });\n        }\n    }]);\n\n    return ApiCalendar;\n}();\n\nvar apiCalendar = void 0;\ntry {\n    apiCalendar = new ApiCalendar();\n} catch (e) {\n    console.log(e);\n}\nexports.default = apiCalendar;"]},"metadata":{},"sourceType":"script"}