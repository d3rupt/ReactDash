{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\PicsNNews\\\\News\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Headline from './Headline';\nimport('./News.css');\nexport default function News() {\n  _s();\n\n  const [newsJson, getNewsJson] = useState(null);\n  const [headlines, getHeadlines] = useState(false);\n  const [shownHeadlines, getShownHeadlines] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [animConsts, setAnimConsts] = useState({\n    interval: 3,\n    indexes: [0, 1, 2],\n    timeout: 250\n  });\n  const [newsInit, isNewsInit] = useState(false);\n  useEffect(() => {\n    if (!headlines) {\n      GetNews();\n    }\n\n    if (shownHeadlines) {\n      const interval = setInterval(() => {\n        if (shownHeadlines.length >= 3) {\n          console.log(shownHeadlines.length);\n          const shl = shownHeadlines;\n          shl.shift();\n          animConsts.indexes.forEach(i => {\n            setTimeout(() => {\n              var _document, _document$getElementB;\n\n              (_document = document) === null || _document === void 0 ? void 0 : (_document$getElementB = _document.getElementById(`headline${i}`)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.classList.add('opacity0');\n\n              if (i == 2) {\n                setTimeout(() => {\n                  getShownHeadlines([...shl]);\n                }, 1100);\n                animConsts.indexes.forEach(i => {\n                  setTimeout(() => {\n                    setTimeout(() => {\n                      var _document2, _document2$getElement;\n\n                      (_document2 = document) === null || _document2 === void 0 ? void 0 : (_document2$getElement = _document2.getElementById(`headline${i}`)) === null || _document2$getElement === void 0 ? void 0 : _document2$getElement.classList.remove('opacity0');\n                    }, 200 * (i + 1));\n                  }, 1200);\n                });\n              }\n            }, 200 * (i + 1));\n          });\n        } else {\n          clearInterval(interval);\n          GetNews();\n        }\n      }, 20 * 1000);\n\n      if (interval) {\n        return;\n      }\n    }\n  }, [headlines]);\n\n  const GetNews = () => {\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json').then(res => res.json()).then(async newsLinks => {\n      let posts = [...newsLinks.data.children];\n      console.log('GETNEWS');\n      console.log(posts);\n      getShownHeadlines(posts);\n      getHeadlines(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news\",\n    children: shownHeadlines === null || shownHeadlines === void 0 ? void 0 : shownHeadlines.slice(0, 3).map((headline, index) => {\n      return /*#__PURE__*/_jsxDEV(Headline, {\n        id: `headline${index}`,\n        title: headline.data.title,\n        subreddit: headline.data.subreddit_name_prefixed,\n        thumbnail: headline.data.thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(News, \"H4BGQ5IysUEM0UanzkhPDnSnKQM=\");\n\n_c = News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/PicsNNews/News/News.js"],"names":["React","useState","useEffect","Headline","News","newsJson","getNewsJson","headlines","getHeadlines","shownHeadlines","getShownHeadlines","visible","setVisible","animConsts","setAnimConsts","interval","indexes","timeout","newsInit","isNewsInit","GetNews","setInterval","length","console","log","shl","shift","forEach","i","setTimeout","document","getElementById","classList","add","remove","clearInterval","fetch","then","res","json","newsLinks","posts","data","children","slice","map","headline","index","title","subreddit_name_prefixed","thumbnail"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Headline from './Headline'\r\n\r\nimport ('./News.css')\r\n\r\nexport default function News() {\r\n  const [newsJson, getNewsJson] = useState(null);\r\n  const [headlines, getHeadlines] = useState(false);\r\n  const [shownHeadlines, getShownHeadlines] = useState([])\r\n  const [visible, setVisible] = useState(false)\r\n  const [animConsts, setAnimConsts] = useState({interval: 3,indexes: [0, 1, 2], timeout: 250})\r\n  const [newsInit, isNewsInit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!headlines) {\r\n      GetNews()\r\n    }\r\n\r\n    if (shownHeadlines) {\r\n      const interval = setInterval(() => {\r\n        if (shownHeadlines.length >= 3) {\r\n          console.log(shownHeadlines.length)\r\n          const shl = shownHeadlines\r\n          shl.shift()\r\n          animConsts.indexes.forEach(i => {\r\n            setTimeout(() => {\r\n              document?.getElementById(`headline${i}`)?.classList.add('opacity0')\r\n              if (i == 2) {\r\n                setTimeout(() => {\r\n                  getShownHeadlines([...shl])\r\n                }, 1100)\r\n                animConsts.indexes.forEach(i => {\r\n                  setTimeout(() => {\r\n                    setTimeout(() => {\r\n                      document?.getElementById(`headline${i}`)?.classList.remove('opacity0')\r\n                    }, 200 * (i+1))\r\n                  }, 1200)\r\n                })\r\n              }\r\n            }, 200 * (i+1))\r\n          })\r\n        } else {\r\n          clearInterval(interval)\r\n          GetNews()\r\n        }\r\n      }, 20 * 1000)\r\n      if (interval) {\r\n        return\r\n      }\r\n    }\r\n  }, [headlines])\r\n\r\n  const GetNews = () => {\r\n    fetch('https://old.reddit.com/user/news-bot-dash/m/news/top.json')\r\n    .then(res => res.json())\r\n    .then(async(newsLinks) => {\r\n      let posts = [...newsLinks.data.children];\r\n      console.log('GETNEWS')\r\n      console.log(posts)\r\n      getShownHeadlines(posts)\r\n      getHeadlines(true)\r\n    })\r\n  }\r\n\r\n    return(\r\n      <div className=\"news\">\r\n      {shownHeadlines?.slice(0,3).map((headline, index) => {\r\n        return <Headline id={`headline${index}`} title={headline.data.title} subreddit={headline.data.subreddit_name_prefixed} thumbnail={headline.data.thumbnail} />\r\n      })}\r\n      </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}