{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\Projects\\\\webDevPractice\\\\React\\\\weather\\\\src\\\\WeatherSection.js\";\nimport React from 'react';\nimport WeatherTile from './WeatherTile';\nimport DayNightCycle from './DayNightCycle'; //Cloud modes\n\nimport CloudsCloudy from './WeatherComponents/Clouds/CloudsCloudy';\nimport PartlyCloudy from './WeatherComponents/Clouds/PartlyCloudy';\nimport Overcast from './WeatherComponents/Clouds/Overcast';\nimport WindyClouds from './WeatherComponents/Clouds/WindyClouds'; //Snow modes\n\nimport LightSnow from './WeatherComponents/Snow/LightSnow';\nimport MedSnow from './WeatherComponents/Snow/MedSnow';\nimport HeavySnow from './WeatherComponents/Snow/HeavySnow';\nimport Blizzard from './WeatherComponents/Snow/Blizzard'; //Rain modes\n\nimport LightRain from './WeatherComponents/Rain/LightRain';\nimport MedRain from './WeatherComponents/Rain/MedRain';\nimport HeavyRain from './WeatherComponents/Rain/HeavyRain';\nimport TorrRain from './WeatherComponents/Rain/TorrRain'; //Storm modes\n\nimport Lightning from './WeatherComponents/Thunderstorm/Lightning';\nimport Fog from './WeatherComponents/Mist&Fog/Fog';\nimport Mist from './WeatherComponents/Mist&Fog/Mist';\nimport './WeatherSection.css';\nimport moment from 'moment';\nimport Clock from './Clock/Clock'; //import { Calendar, momentLocalizer } from 'react-big-calendar';\n// Setup the localizer by providing the moment (or globalize) Object\n// to the correct localizer.\n//const localizer = Calendar.momentLocalizer(moment) // or globalizeLocalizer\n\nexport default class WeatherSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.RequestWeather = this.RequestWeather.bind(this);\n    this.state = {\n      isLoading: false,\n      weatherData: null,\n      location: null,\n      skyPos: {}\n    };\n  }\n\n  RequestWeather() {\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=6018bc6ca5bb4a4884c184418202812&q=Winnipeg&days=2`) //fetch(`http://api.weatherapi.com/v1/forecast.json?key=6018bc6ca5bb4a4884c184418202812&q=${this.state.location}&days=5`)\n    .then(response => response.json()).then(json => {\n      this.setState({\n        isLoading: true,\n        currentData: json.current,\n        weatherData: json.forecast.forecastday,\n        isDay: json.current.is_day\n      });\n      this.checkSunState();\n      this.CheckSunPos();\n    }).catch(() => {\n      console.log('error');\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.isDay == 0) {\n      document.querySelector('.clock').classList.add('clockNight');\n\n      for (var tile in document.querySelectorAll('.tile')) {\n        tile.classList.add('tileNight');\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.RequestWeather();\n    setInterval(this.checkSunState, 60000 * 5);\n    setInterval(this.RequestWeather, 120000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherBackground\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tiles\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"house\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DayNightCycle, {\n          isday: this.state.isDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PartlyCloudy, {\n          isday: this.state.isDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MedSnow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Clock, {\n          isday: this.state.isDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nowWeather\",\n          children: this.state.isLoading ? /*#__PURE__*/_jsxDEV(WeatherTile, {\n            isday: this.state.isDay,\n            className: \"tileCold\",\n            condition: this.state.currentData.condition.text,\n            icon: this.state.currentData.condition.icon,\n            date: \"Now\",\n            today: this.state.currentData.temp_c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast\",\n          children: this.state.isLoading ? this.state.weatherData.map(data => /*#__PURE__*/_jsxDEV(WeatherTile, {\n            isday: this.state.isDay,\n            className: \"tileCold\",\n            condition: this.state.currentData.condition.text,\n            icon: data.day.condition.icon,\n            date: moment(data.date, 'YYYY-MM-DD').calendar(null, {\n              lastDay: '[Yesterday]',\n              sameDay: '[Today]',\n              nextDay: '[Tomorrow]'\n            }),\n            high: data.day.maxtemp_c,\n            low: data.day.mintemp_c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 47\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n/*{switch (this.state.currentData.condition.code) {\r\n  case 1030:\r\n    return <Mist />;\r\n  case 1063:\r\n    return <LightRain />;\r\n\r\n  case 1066:\r\n    return <LightSnow />;\r\n\r\n  case 1069:\r\n    return(<LightRain /><LightSnow />);\r\n\r\n  case 1072:\r\n    return <LightRain />;\r\n\r\n  case 1087:\r\n    return <Lightning />;\r\n\r\n  case 1114:\r\n    return <MedSnow />;\r\n\r\n  case 1117:\r\n    return <Blizzard />;\r\n\r\n  case 1135:\r\n    return <Fog />;\r\n\r\n  case 1147:\r\n    return <Fog />;\r\n\r\n  case 1150:\r\n    return <LightRain />;\r\n\r\n  case 1153:\r\n    return <LightRain />\r\n\r\n  case 1168:\r\n    return <LightRain />\r\n\r\n  case 1171:\r\n    return <HeavyRain />\r\n\r\n  case 1180:\r\n  return <LightRain />\r\n\r\n  case 1183:\r\n    return <LightRain />\r\n\r\n  case 1186:\r\n    return <MedRain />\r\n\r\n  case 1189:\r\n    return <MedRain />\r\n\r\n  case 1192:\r\n    return <HeavyRain />\r\n\r\n  case 1195:\r\n    return <HeavyRain />\r\n\r\n  case 1198:\r\n    return <LightRain />\r\n\r\n  case 1201:\r\n    return <MedRain />\r\n\r\n  case 1204:\r\n    return <LightRain />\r\n\r\n  case 1207:\r\n    return <MedRain />\r\n\r\n  case 1210:\r\n    return <LightSnow />\r\n\r\n  case 1213:\r\n    return <LightSnow />\r\n\r\n  case 1216:\r\n    return <MedSnow />\r\n\r\n  case 1219:\r\n    return <MedSnow />\r\n\r\n  case 1222:\r\n    return <HeavySnow />\r\n\r\n  case 1225:\r\n    return <HeavySnow />\r\n\r\n  case 1237:\r\n    return <LightSnow />\r\n\r\n  case 1240:\r\n    return <LightRain />\r\n\r\n  case 1243:\r\n    return <MedRain />\r\n\r\n}}*/","map":{"version":3,"sources":["C:/Users/Nathan/Documents/Projects/webDevPractice/React/weather/src/WeatherSection.js"],"names":["React","WeatherTile","DayNightCycle","CloudsCloudy","PartlyCloudy","Overcast","WindyClouds","LightSnow","MedSnow","HeavySnow","Blizzard","LightRain","MedRain","HeavyRain","TorrRain","Lightning","Fog","Mist","moment","Clock","WeatherSection","Component","constructor","props","RequestWeather","bind","state","isLoading","weatherData","location","skyPos","fetch","then","response","json","setState","currentData","current","forecast","forecastday","isDay","is_day","checkSunState","CheckSunPos","catch","console","log","componentDidUpdate","document","querySelector","classList","add","tile","querySelectorAll","componentDidMount","setInterval","render","condition","text","icon","temp_c","map","data","day","date","calendar","lastDay","sameDay","nextDay","maxtemp_c","mintemp_c"],"mappings":"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":["import React from 'react'\r\nimport WeatherTile from './WeatherTile'\r\nimport DayNightCycle from './DayNightCycle'\r\n//Cloud modes\r\nimport CloudsCloudy from './WeatherComponents/Clouds/CloudsCloudy'\r\nimport PartlyCloudy from './WeatherComponents/Clouds/PartlyCloudy'\r\nimport Overcast from './WeatherComponents/Clouds/Overcast'\r\nimport WindyClouds from './WeatherComponents/Clouds/WindyClouds'\r\n//Snow modes\r\nimport LightSnow from './WeatherComponents/Snow/LightSnow'\r\nimport MedSnow from './WeatherComponents/Snow/MedSnow'\r\nimport HeavySnow from './WeatherComponents/Snow/HeavySnow'\r\nimport Blizzard from './WeatherComponents/Snow/Blizzard'\r\n\r\n//Rain modes\r\nimport LightRain from './WeatherComponents/Rain/LightRain'\r\nimport MedRain from './WeatherComponents/Rain/MedRain'\r\nimport HeavyRain from './WeatherComponents/Rain/HeavyRain'\r\nimport TorrRain from './WeatherComponents/Rain/TorrRain'\r\n\r\n//Storm modes\r\nimport Lightning from './WeatherComponents/Thunderstorm/Lightning'\r\n\r\nimport Fog from './WeatherComponents/Mist&Fog/Fog'\r\nimport Mist from './WeatherComponents/Mist&Fog/Mist'\r\n\r\nimport './WeatherSection.css'\r\nimport moment from 'moment'\r\nimport Clock from './Clock/Clock';\r\n\r\n//import { Calendar, momentLocalizer } from 'react-big-calendar';\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\n//const localizer = Calendar.momentLocalizer(moment) // or globalizeLocalizer\r\n\r\nexport default class WeatherSection extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.RequestWeather = this.RequestWeather.bind(this)\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      weatherData: null,\r\n      location: null,\r\n      skyPos: {}\r\n    }\r\n  }\r\n\r\n  RequestWeather() {\r\n    fetch(`http://api.weatherapi.com/v1/forecast.json?key=6018bc6ca5bb4a4884c184418202812&q=Winnipeg&days=2`)\r\n    //fetch(`http://api.weatherapi.com/v1/forecast.json?key=6018bc6ca5bb4a4884c184418202812&q=${this.state.location}&days=5`)\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      this.setState({\r\n        isLoading: true,\r\n        currentData: json.current,\r\n        weatherData: json.forecast.forecastday,\r\n        isDay: json.current.is_day\r\n        })\r\n        this.checkSunState();\r\n        this.CheckSunPos();\r\n\r\n      }\r\n    ).catch(() => {\r\n      console.log('error')\r\n    })\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.isDay == 0) {\r\n      document.querySelector('.clock').classList.add('clockNight')\r\n      for (var tile in document.querySelectorAll('.tile')) {\r\n        tile.classList.add('tileNight')\r\n      }\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.RequestWeather();\r\n    setInterval(this.checkSunState, (60000 * 5))\r\n    setInterval(this.RequestWeather, 120000)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <div className=\"weatherBackground\">\r\n      <div className=\"Tiles\">\r\n        <div className=\"house\"></div>\r\n        <DayNightCycle isday={this.state.isDay}/>\r\n        <PartlyCloudy isday={this.state.isDay}/>\r\n        <MedSnow />\r\n        <Clock isday={this.state.isDay}/>\r\n        <div className=\"nowWeather\">\r\n        {this.state.isLoading ?\r\n        <WeatherTile isday={this.state.isDay} className=\"tileCold\" condition={this.state.currentData.condition.text} icon={this.state.currentData.condition.icon} date=\"Now\" today={this.state.currentData.temp_c} /> : null}\r\n        </div>\r\n          <div className=\"forecast\">\r\n        {this.state.isLoading ?\r\n          this.state.weatherData.map(data => (<WeatherTile isday={this.state.isDay} className=\"tileCold\" condition={this.state.currentData.condition.text} icon={data.day.condition.icon} date={moment(data.date, 'YYYY-MM-DD').calendar(null, {\r\n           lastDay : '[Yesterday]',\r\n           sameDay : '[Today]',\r\n           nextDay : '[Tomorrow]'\r\n          })} high={data.day.maxtemp_c} low={data.day.mintemp_c}/>)) : null }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*{switch (this.state.currentData.condition.code) {\r\n  case 1030:\r\n    return <Mist />;\r\n  case 1063:\r\n    return <LightRain />;\r\n\r\n  case 1066:\r\n    return <LightSnow />;\r\n\r\n  case 1069:\r\n    return(<LightRain /><LightSnow />);\r\n\r\n  case 1072:\r\n    return <LightRain />;\r\n\r\n  case 1087:\r\n    return <Lightning />;\r\n\r\n  case 1114:\r\n    return <MedSnow />;\r\n\r\n  case 1117:\r\n    return <Blizzard />;\r\n\r\n  case 1135:\r\n    return <Fog />;\r\n\r\n  case 1147:\r\n    return <Fog />;\r\n\r\n  case 1150:\r\n    return <LightRain />;\r\n\r\n  case 1153:\r\n    return <LightRain />\r\n\r\n  case 1168:\r\n    return <LightRain />\r\n\r\n  case 1171:\r\n    return <HeavyRain />\r\n\r\n  case 1180:\r\n  return <LightRain />\r\n\r\n  case 1183:\r\n    return <LightRain />\r\n\r\n  case 1186:\r\n    return <MedRain />\r\n\r\n  case 1189:\r\n    return <MedRain />\r\n\r\n  case 1192:\r\n    return <HeavyRain />\r\n\r\n  case 1195:\r\n    return <HeavyRain />\r\n\r\n  case 1198:\r\n    return <LightRain />\r\n\r\n  case 1201:\r\n    return <MedRain />\r\n\r\n  case 1204:\r\n    return <LightRain />\r\n\r\n  case 1207:\r\n    return <MedRain />\r\n\r\n  case 1210:\r\n    return <LightSnow />\r\n\r\n  case 1213:\r\n    return <LightSnow />\r\n\r\n  case 1216:\r\n    return <MedSnow />\r\n\r\n  case 1219:\r\n    return <MedSnow />\r\n\r\n  case 1222:\r\n    return <HeavySnow />\r\n\r\n  case 1225:\r\n    return <HeavySnow />\r\n\r\n  case 1237:\r\n    return <LightSnow />\r\n\r\n  case 1240:\r\n    return <LightRain />\r\n\r\n  case 1243:\r\n    return <MedRain />\r\n\r\n}}*/\r\n"]},"metadata":{},"sourceType":"module"}